# Generated by Django 4.2.2 on 2023-06-29 05:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("gender", models.CharField(max_length=10, null=True)),
                ("birthDate", models.DateField(default=django.utils.timezone.now)),
                ("age", models.IntegerField(default=18)),
                ("phone_number", models.CharField(max_length=10, null=True)),
                (
                    "verification_status",
                    models.CharField(default="pending", max_length=20),
                ),
                ("verification_slug", models.CharField(max_length=100, null=True)),
                ("otp", models.CharField(max_length=6, null=True)),
                ("otp_validity", models.BooleanField(default=False)),
                ("phoneOTP", models.CharField(max_length=6, null=True)),
                ("phoneOTP_validity", models.BooleanField(default=False)),
                ("resetToken", models.CharField(default="none", max_length=50)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="product",
            fields=[
                ("product_id", models.AutoField(primary_key=True, serialize=False)),
                ("product_name", models.CharField(max_length=150)),
                ("product_image", models.ImageField(upload_to="product/images/")),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("Electronics", "Electronics"),
                            ("Smartphone", "Smartphone"),
                            ("Laptop", "Laptop"),
                            ("Tablet", "Tablet"),
                            ("Computer", "Computer"),
                            ("Stationary", "Stationary"),
                            ("Fashion", "Fashion"),
                            ("Furniture", "Furniture"),
                            ("Health", "Health"),
                            ("Beauty", "Beauty"),
                            ("Kids", "Kids"),
                            ("Books", "Books"),
                            ("Sports", "Sports"),
                            ("Automotive", "Automotive"),
                            ("Groceries", "Groceries"),
                            ("Jewelry", "Jewelry"),
                            ("Watches", "Watches"),
                            ("Art and Crafts", "Art and Crafts"),
                            ("Medicines", "Medicines"),
                            ("Personal Care", "Personal Care"),
                            ("Travel", "Travel"),
                            ("Students", "Students"),
                            ("Men's", "Men's"),
                            ("women's", "women's"),
                            ("Adult's", "Adult's"),
                            ("Girl's", "Girl's"),
                            ("Boy's", "Boy's"),
                            ("Cycle", "Cycle"),
                            ("Bike", "Bike"),
                            ("Car", "Car"),
                        ],
                        max_length=100,
                    ),
                ),
                ("description", models.TextField()),
                ("specifications_list", models.TextField()),
                ("availability", models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name="seller",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=150, null=True)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("phone", models.IntegerField(null=True)),
                ("password", models.CharField(max_length=128)),
                (
                    "verification_status",
                    models.CharField(default="pending", max_length=20),
                ),
                ("otp", models.CharField(max_length=6, null=True)),
                ("otp_validity", models.BooleanField(default=False)),
                (
                    "seller_verification_slug",
                    models.CharField(max_length=100, null=True),
                ),
                ("seller_status", models.CharField(default="active", max_length=20)),
                ("resetToken", models.CharField(default="none", max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="wishlist",
            fields=[
                ("wishlist_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "product_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.product"
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="userAddress",
            fields=[
                ("address_id", models.AutoField(primary_key=True, serialize=False)),
                ("country", models.CharField(max_length=30)),
                ("state", models.CharField(max_length=30)),
                ("city", models.CharField(max_length=30)),
                ("street", models.CharField(max_length=30)),
                ("zip_code", models.IntegerField()),
                ("house_no", models.CharField(max_length=40)),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="user_support",
            fields=[
                ("help_id", models.AutoField(primary_key=True, serialize=False)),
                ("issue_message", models.TextField()),
                ("image", models.ImageField(upload_to="user_support/images/")),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="sellerAddress",
            fields=[
                ("address_id", models.AutoField(primary_key=True, serialize=False)),
                ("country", models.CharField(max_length=30)),
                ("state", models.CharField(max_length=30)),
                ("city", models.CharField(max_length=30)),
                ("street", models.CharField(max_length=30)),
                ("zip_code", models.IntegerField()),
                ("house_no", models.CharField(max_length=40)),
                (
                    "seller_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.seller"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="productReview",
            fields=[
                ("review_id", models.AutoField(primary_key=True, serialize=False)),
                ("review_msg", models.TextField()),
                ("review_rating", models.IntegerField()),
                ("review_img", models.ImageField(upload_to="product_review/images/")),
                (
                    "product_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.product"
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="productQuestions",
            fields=[
                ("question_id", models.AutoField(primary_key=True, serialize=False)),
                ("question_msg", models.TextField()),
                ("answer", models.TextField()),
                ("likes", models.IntegerField()),
                ("dislikes", models.IntegerField()),
                ("replyList", models.TextField()),
                (
                    "product_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.product"
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="product",
            name="seller_id",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="api.seller"
            ),
        ),
        migrations.CreateModel(
            name="orders",
            fields=[
                ("order_id", models.AutoField(primary_key=True, serialize=False)),
                ("quantity", models.IntegerField()),
                ("order_status", models.CharField(max_length=20)),
                ("order_date", models.DateTimeField(auto_now_add=True)),
                (
                    "product_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.product"
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="cart",
            fields=[
                ("cart_id", models.AutoField(primary_key=True, serialize=False)),
                ("quantity", models.IntegerField()),
                (
                    "product_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.product"
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
